Garbage Collection (OCA Objective 2.4)
1. In Java, garbage collection (GC) provides automated memory management.
2. The purpose of GC is to delete objects that can’t be reached.
3. Only the JVM decides when to run the GC; you can only suggest it.
4. You can’t know the GC algorithm for sure.
5. Objects must be considered eligible before they can be garbage collected.
6. An object is eligible when no live thread can reach it. -********
7. To reach an object, you must have a live, reachable reference to that object.
8. Java applications can run out of memory.
9. Islands of objects can be garbage collected, even though they refer to each other.
10. Request garbage collection with System.gc();.
11. The Object class has a finalize() method.
12. The finalize() method is guaranteed to run once and only once before the garbage collector deletes an object.
13. The garbage collector makes no guarantees; finalize() may never run.
14. You can ineligible-ize an object for GC from within finalize(). ****