Ques:
1. BFS vs DFS
2. Inorder/PreOrder/PostOrder w/o recursion
3. Inorder Tree Traversal without recursion and without stack! **** Morris Traversal
4. Lowest Common Ancestor
5. Print Left/Right/Bottom/Top View
6. Clone a Tree with Random Pointers



Q) BFS and DFS in Tree
   BFS - LOT
   DFS - inorder,postorder,preorder;

Q) Inorder w/o recursion
        void inorder()
        {
            if (root == null)
                return;


            Stack<Node> s = new Stack<Node>();
            Node curr = root;

            // traverse the tree
            while (curr != null || s.size() > 0)
            {

                /* Reach the left most Node of the
                curr Node */
                while (curr !=  null)
                {
                    /* place pointer to a tree node on
                       the stack before traversing
                      the node's left subtree */
                    s.push(curr);
                    curr = curr.left;
                }

                /* Current must be NULL at this point */
                curr = s.pop();

                System.out.print(curr.data + " ");

                /* we have visited the node and its
                   left subtree.  Now, it's right
                   subtree's turn */
                curr = curr.right;
            }
        }